name: Deploy to EC2

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to EC2 Instance
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t myportfolio .

    - name: Save Docker image to tar file
      run: |
        docker save myportfolio > myportfolio.tar

    - name: Upload SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/my-ec2-key.pem
        chmod 600 ~/.ssh/my-ec2-key.pem

    - name: Copy Docker image to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/my-ec2-key.pem myportfolio.tar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/

    - name: Generate .env file
      run: |
        echo "RAILS_ENV=${{ secrets.RAILS_ENV }}" >> .env
        echo "SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}" >> .env
        echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
        echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
        echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
        echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
        echo "RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}" >> .env
        echo "GOOGLE_APPLICATION_CREDENTIALS=/rails/google-credentials.json" >> .env

    - name: Copy .env to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/my-ec2-key.pem .env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/.env

    - name: Decode Google credentials
      run: |
        echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}" | base64 -d > google-credentials.json


    - name: Copy Google credentials to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/my-ec2-key.pem google-credentials.json ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/google-credentials.json

    - name: SSH and load + run Docker image
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/my-ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          set -e

          echo "Clean old container"
          docker stop myportfolio || true
          docker rm myportfolio || true

          echo "Clean old image and cache"
          docker rmi myportfolio || true
          docker system prune -af || true

          echo "Load Docker image"
          docker load < /home/ubuntu/myportfolio.tar

          echo "Run with injected secrets"
          docker run -d -p 3001:3000 --name myportfolio \
            --env-file /home/ubuntu/.env \
            -e GOOGLE_APPLICATION_CREDENTIALS=/rails/google-credentials.json \
            -v /home/ubuntu/google-credentials.json:/rails/google-credentials.json \
            myportfolio

          echo "Clean up sensitive files"
          rm /home/ubuntu/.env || true
          rm /home/ubuntu/google-credentials.json || true

          echo "!!!Deployment complete!!!"
        EOF
