name: Deploy to EC2

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to EC2 Instance
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t myportfolio .

    - name: Save Docker image to tar file
      run: |
        docker save myportfolio > myportfolio.tar

    - name: Upload SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/my-ec2-key.pem
        chmod 600 ~/.ssh/my-ec2-key.pem

    - name: Copy Docker image to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/my-ec2-key.pem myportfolio.tar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/

        - name: SSH and load + run Docker image
      env:
        RAILS_ENV: ${{ secrets.RAILS_ENV }}
        SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/my-ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          set -e

          echo "Clean old container"
          docker stop myportfolio || true
          docker rm myportfolio || true

          echo "Clean old image and cache"
          docker rmi myportfolio || true
          docker system prune -af || true

          echo "Load Docker image"
          docker load < /home/ubuntu/myportfolio.tar

          echo "Run with injected secrets"
          docker run -d -p 3001:3000 --name myportfolio \
            -e RAILS_ENV=$RAILS_ENV \
            -e SECRET_KEY_BASE=$SECRET_KEY_BASE \
            -e DATABASE_HOST=$DATABASE_HOST \
            -e DATABASE_NAME=$DATABASE_NAME \
            -e DATABASE_USERNAME=$DATABASE_USERNAME \
            -e DATABASE_PASSWORD=$DATABASE_PASSWORD \
            -e RAILS_MASTER_KEY=$RAILS_MASTER_KEY \
            -e GOOGLE_APPLICATION_CREDENTIALS=/rails/google-credentials.json \
            myportfolio

          echo "!!!Deployment complete!!!"
        EOF
